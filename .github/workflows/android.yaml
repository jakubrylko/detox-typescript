name: Detox Android Tests

on:
  pull_request:

jobs:
  detox-android:
    name: Run Detox Tests on Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile && yarn global add detox-cli
        # 3. Install Command Line Tools and SDK
      - name: Install Android Command Line Tools
        run: |
          mkdir -p $HOME/android-sdk
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest

      # 4. Set Up Environment Variables
      - name: Set up Android SDK environment
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/emulator:$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/35.0.0" >> $GITHUB_PATH

      # 5. Accept Licenses and Install Required SDK Packages
      - name: Install Required Android SDK Packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install 'build-tools;35.0.0' 'platform-tools' 'platforms;android-31' 'system-images;android-31;google_apis;arm64-v8a'

      # 6. Create AVD
      - name: Create Emulator
        run: |
          echo "no" | avdmanager --verbose create avd --force -n Pixel_XL_API_31 \
            --abi "google_apis/arm64-v8a" -k "system-images;android-31;google_apis;arm64-v8a" \
            --device "pixel_xl"

      # 7. Start Emulator
      - name: Start Emulator
        run: |
          nohup emulator -avd Pixel_XL_API_31 -no-snapshot -noaudio -no-boot-anim -wipe-data \
            -netdelay none -netspeed full > emulator.log 2>&1 &
          adb start-server
          adb wait-for-device
          # Wait for the emulator to complete booting
          until adb shell getprop sys.boot_completed | grep -m 1 '1'; do
            echo "Waiting for emulator to boot..."
            sleep 5
          done
          echo "Emulator is ready!"

      # 8. Verify Emulator Is Running
      - name: Verify Emulator
        run: adb devices

      # - name: Add Android SDK to PATH
      #   run: echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/35.0.0" >> $GITHUB_PATH

      # - name: Install Android SDK
      #   uses: android-actions/setup-android@v2
      #   with:
      #     api-level: 31
      #     build-tools-version: '35.0.0'
      #     target: google_apis
      #     arch: arm64-v8a

      # - name: Set up Android Emulator
      #   run: |
      #     yes | sdkmanager --licenses && sdkmanager --install 'build-tools;latest' 'platform-tools' 'platforms;android-31' 'system-images;android-31;google_apis;arm64-v8a'

      #     echo "no" | avdmanager --verbose create avd --force -n Pixel_XL_API_31 --abi "google_apis/arm64-v8a" -k "system-images;android-31;google_apis;arm64-v8a" --device "pixel_xl"

      #     nohup emulator -avd Pixel_XL_API_31 -no-snapshot -noaudio -no-boot-anim -wipe-data -netdelay none -netspeed full > emulator.log 2>&1 &

      #     adb wait-for-device shell getprop dev.bootcomplete

      # - name: Install Android SDK
      #   run: yes | sdkmanager --licenses && sdkmanager --install 'build-tools;35.0.0' 'platform-tools' 'platforms;android-31' 'system-images;android-31;google_apis;arm64-v8a'

      # - name: Create required emulator
      #   run: echo "no" | avdmanager --verbose create avd --force -n Pixel_XL_API_31 --abi "google_apis/arm64-v8a" -k "system-images;android-31;google_apis;arm64-v8a" --device "pixel_xl"

      # - name: Start Emulator
      #   run: |
      #     nohup emulator -avd Pixel_XL_API_31 -no-snapshot -noaudio -no-boot-anim -wipe-data -netdelay none -netspeed full > emulator.log 2>&1 &
      #     adb wait-for-device
      #     # Wait for the emulator to complete booting
      #     until adb shell getprop sys.boot_completed | grep -m 1 '1'; do
      #       echo "Waiting for emulator to boot..."
      #       sleep 5
      #     done
      #     echo "Emulator is ready!"

      # - name: List Devices
      #   run: adb devices
      #      echo "no" | avdmanager --verbose create avd --force -n Pixel_XL_API_31 --abi "google_apis/arm64-v8a" -k "system-images;android-31;google_apis;arm64-v8a" --device "pixel_xl"

      #      adb wait-for-device shell getprop dev.bootcomplete

      # - name: Start Metro Bundler
      #   run: yarn metro &

      # - name: Set up port forwarding
      #   run: adb reverse tcp:8081 tcp:8081

      # - name: Build Android APK
      #   run: yarn detox:build:android:release

      # - name: Run Detox Tests
      #   run: yarn detox:test:android:release
