name: Detox Android Tests (2nd approach)

on:
  pull_request:

jobs:
  detox-android:
    runs-on: macos-latest
    env:
      API_LEVEL: 31
      ARCH: arm64-v8a
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ github.workspace }}/android-sdk/emulator:$PATH

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          node-version: '20'

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          cache: gradle
          distribution: 'temurin'
          java-version: '17'

      - name: Get device name
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./.detoxrc.js').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT

      - name: Set up environment
        run: |
          echo "ANDROID_HOME=${{ github.workspace }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${{ github.workspace }}/android-sdk" >> $GITHUB_ENV

      - name: Install Android SDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT
          yes | sdkmanager --licenses > /dev/null
          sdkmanager --install "platform-tools" "emulator" "system-images;android-31;default;x86_64" > /dev/null
          sdkmanager --install "platforms;android-31" "build-tools;31.0.0" > /dev/null

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-31;default;x86_64" --device "pixel_xl"

      - name: Start Emulator
        run: |
          nohup emulator -avd test -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect > /dev/null 2>&1 &
          adb wait-for-device
          adb shell input keyevent 82 # Unlock emulator

      - name: Verify Emulator is Running
        run: |
          adb devices
          adb shell getprop sys.boot_completed

      # - name: Start Android Emulator
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ env.API_LEVEL }}
      #     arch: ${{ env.ARCH }}
      #     avd-name: ${{ steps.device.outputs.AVD_NAME }}
      #     emulator-boot-timeout: 300
      #     script: echo 'Starting...'

      # - name: Create AVD and generate snapshot for caching
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ env.API_LEVEL }}
      #     arch: ${{ env.ARCH }}
      #     disable-animations: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     force-avd-creation: false
      #     script: echo 'Generated AVD snapshot for caching.'

      - name: Start Metro bundler
        run: yarn metro &

      - name: Cache Detox build
        id: cache-detox-build
        uses: actions/cache@v3
        with:
          path: android/app/build
          key: ${{ runner.os }}-detox-build
          restore-keys: ${{ runner.os }}-detox-build

      - name: Build Detox APK
        run: yarn detox:build:android:release

      # - name: Get device name
      #   id: device
      #   run: node -e "console.log('AVD_NAME=' + require('./.detoxrc.js').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT

      - name: Run Detox tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          arch: ${{ env.ARCH }}
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: yarn detox:test:android:release --headless --record-logs failing --record-videos failing

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts
          path: artifacts
